#include "landingpage.h"
#include "ui_landingpage.h" // this is generated by uic from landingpage.ui


#include "../LoginPage/loginpage.h"
#include "../RegisterPage/registerpage.h"
#include "../HomePage/homepage.h" // Include HomePage header

#include <QDebug>

//Constructor This  initializes LandingPage and sets up the ui from landingpage.ui

LandingPage::LandingPage(QWidget *parent) :
    QDialog(parent), 
    ui(new Ui::LandingPage)
{
    ui->setupUi(this); //setup the widgets and layouts designed in landingpage.ui
}

//Destructor: Deletes the UI object to free resources
LandingPage::~LandingPage(){

    delete ui; 
}

//Slot for handling the login buttons clicked 
void LandingPage::on_navigateToLoginButton_clicked(){

    qDebug() << "navigateToLoginButton_clicked on LandingPage";

    LoginPage loginDialog(nullptr);
    loginDialog.setAttribute(Qt::WA_DeleteOnClose);

    this->accept(); // Close LandingPage and signal acceptance

    loginDialog.exec(); // Show LoginPage modally
    // Flow returns to main.cpp after LoginPage is closed
}

void LandingPage::on_navigateToRegisterButton_clicked()
{
    qDebug() << "navigateToRegisterButton_clicked on LandingPage";
    
    RegisterPage registerDialog(nullptr);
    registerDialog.setAttribute(Qt::WA_DeleteOnClose);
    
    this->accept(); // Close LandingPage
    
    registerDialog.exec(); // Show RegisterPage modally
}

void LandingPage::on_navigateToHomeButton_clicked()
{
    qDebug() << "navigateToHomeButton_clicked on LandingPage";
    this->accept(); // Close current LandingPage
    
    // HomePage requires a username. For now, we pass a placeholder.
    // You might want to establish a guest session or a different HomePage constructor.
    HomePage *homePage = new HomePage("NavigatingDirectlyToHome", nullptr); 
    homePage->setAttribute(Qt::WA_DeleteOnClose);
    homePage->exec();
}