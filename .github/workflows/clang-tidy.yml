name: Clang-Tidy on PR Files Only

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  clang-tidy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cmake build-essential qt6-base-dev \
            qt6-tools-dev qt6-tools-dev-tools libxkbcommon-dev \
            libsodium-dev libssl-dev

      - name: Configure project with CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Get list of changed C++ files
        id: changed-files
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '.*\.(cpp|h|hpp|cc|cxx)$' || true)
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          
          if [[ -n "$CHANGED_FILES" ]]; then
            echo "FILES_FOUND=true" >> $GITHUB_ENV
          else
            echo "FILES_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Check if any files were found
        if: env.FILES_FOUND == 'false'
        run: echo "No C++ files changed in this PR."

      - name: Run clang-tidy on changed files
        if: env.FILES_FOUND == 'true'
        run: |
          echo "Changed files: $CHANGED_FILES"
          clang-tidy -p build $CHANGED_FILES > build/tidy-report.txt 2>&1 || true
          cat build/tidy-report.txt

      - name: Upload tidy report
        if: env.FILES_FOUND == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: clang-tidy-report
          path: build/tidy-report.txt

      - name: Comment PR with clang-tidy results
        if: env.FILES_FOUND == 'true' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'build/tidy-report.txt';
            if (fs.existsSync(path)) {
              const report = fs.readFileSync(path, 'utf8').trim();
              const changedFiles = process.env.CHANGED_FILES || '<file-list>';

              const body = report
                ? `## üîç Clang-Tidy Report
  
            \`\`\`
            ${report}
            \`\`\`
          
            ---
            
            <details>
            <summary>üí° How to fix most issues</summary>

          Most issues can be fixed automatically with:

            \`\`\`bash
            clang-tidy -p build --fix-errors ${changedFiles}
            \`\`\`
            
            This will apply suggested fixes to the files in-place.
            
            
            </details>`
            : '## ‚úÖ Clang-Tidy Report\n\nNo issues found in the changed files! üéâ';
            
              github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
            });
            }
